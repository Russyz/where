# This file describe most files used by WHERE and is used extensively by the where.lib.files module to read from, write
# to and copy the correct files.
#
# Each file is referenced by a unique file key, written here in square brackets, e.g. [file_key]. Further, the
# following key-values are recognized:
#
#     filename:       The name of the file on disk.
#     aliases:        Alternative file names.
#     directory:      The directory the file is located in.
#     publish:        Directories the file may be published (copied) to.
#     description:    Quick description of the file, only for documenting purposes.
#     specification:  Link to a document specifying the format of the file.
#     creator:        The script that creates the file, if applicable.
#     origin:         Web site where the file can be found, if applicable. This should point to a website where the
#                     file can be downloaded. Not used by the program, only for documenting purposes.
#     url:            The actual url (or base-url without filename) the file can be downloaded from.
#     parser:         Name of parser (i.e. file in parsers-directory without .py) that parses the file.
#
# Files that may be gzipped can be specified as having {$gz} at the end of the filename (with the curly braces). In
# this case, the gzipped version will be automatically used if it as available.  Otherwise, the fallback is the
# unzipped version.
#
# This configuration file uses placeholders, which are replaced by running WHERE, for example the current running date
# or the station in use.  The following placeholders are available for all files:
#
#   PLACEHOLDER       TECH     DESCRIPTION
#_________________________________________________________________________________________
#   {$ce}             DGSV     - century (e.g. 20 for the year 2017)
#   {$d}              DGSV     - day (1-31)
#   {$dd}             DGSV     - day (01-31)
#   {$dow}            DGSV     - day of week (0: Sunday, 1: Monday, ..., 6: Saturday)
#   {$doy}            DGSV     - day of year (001-366)
#   {$gpsweek}        DGSV     - GPS week
#   {$gz}             DGSV     - file may or may not be gzipped
#   {$hh}             DGSV     - hour (00-23)
#   {$id}             DGSV     - as provided by --id=... on the command line
#   {$m}              DGSV     - month (1-12)
#   {$mm}             DGSV     - month (01-12)
#   {$mmm}            DGSV     - month (jan-dec)
#   {$MMM}            DGSV     - month (JAN-DEC)
#   {$tech}           DGSV     - technique (e.g. doris, gnss, vlbi, slr)
#   {$user}           DGSV     - user name
#   {$yy}             DGSV     - last 2 digits of year (00-99)
#   {$yyyy}           DGSV     - year (e.g. 2017)


[DEFAULT]
model_path      = {$path_work}/{$user}/{$tech}/{$yyyy}{$mm}{$dd}{$session}{$id}

[trop_files]
filename        = COD{$gpsweek}{$dow}.TRO
directory       = {$path_data}/common/trop
description     = GNSS-based ZTD
origin          = ftp://igs.org/pub/data/format/sinex_tropo.txt
url             = ftp://ftp.aiub.unibe.ch/CODE/{$yyyy}
parser          = trop_snx

[output_csv__trop]
filename        = {$session}{$gpsweek}{$dow}.csv
directory       = %(model_path)s
description     = GNSS-based ZTD interpolated at 300 s rate
creator         = writers/csv.py



