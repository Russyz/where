# This is the WHERE configuration file for the VLBI pipeline. It is read and handled by the where.config module, and
# further documentation can be found there.

[vlbi]
skip_stages                 =
filekey_suffix              = vlbi
arc_length                  = 1

# Input
obs_format                  = ngs
get_session_from_master     = True
skip_sessions               = XF

# Apriori
ocean_tides                 = tpxo7.2_no_cmc
ocean_tides_cmc             = False
atmospheric_tides_cmc       = False
celestial_reference_frames  = icrf2, vlbi_obs
reference_frames            = itrf:2014, vtrf:2017d, custom, vlbi_obs

# Editors and removers
editors                     = analysis_status
editors:add_sections
removers                    = vlbi_data_quality, vlbi_iono_quality, elevation, ignore_station, ignore_epochs,
                              vlbi_ignore_baseline, vlbi_ignore_source, ignore_observation
removers:add_sections

# Calculate theoretical delay
calculate_max_iterations    = 5
calculate_outlier_limit     = 10
calculate_outlier_limit:library
pos_models                  = ocean_tides, solid_tides, solid_pole_tides, ocean_pole_tides, atmospheric_tides,
                              eccentricity_vector
pos_models:add_sections     = model
calc_models                 = vlbi_vacuum_delay, troposphere_radio, vlbi_ionosphere, vlbi_cable_calibration,
                              vlbi_axis_offset, vlbi_thermal_deformation, vlbi_grav_delay, vlbi_geometric_delay
calc_models:add_sections    = model
correction_models           = vlbi_clock_correction
correction_models:add_sections
detect_clockbreaks          = False
detect_clockbreaks:help     = Attempt to automatically detect clock breaks during analysis?
detect_clockbreaks:wizard

# Parameters to estimate
estimate_max_iterations     = 2
estimate_outlier_limit      = 3
estimate_method             = cpwl
estimate_constraint         = nnt, nnr, nnr_crf
estimate_stochastic         = trop_wet, trop_grad, vlbi_clock
estimate_stochastic:add_sections
estimate_constant           = vlbi_site_pos, vlbi_eop_nut, vlbi_eop_pm, vlbi_eop_pm_rate, vlbi_eop_dut1,
                              vlbi_eop_lod
estimate_constant:help      = Parameters to estimate as constant
estimate_constant:type      = List[enum[...]]
estimate_constant:add_sections

# Output
output                      = vlbi_baseline_stats, parameter_corrections, sinex, timeseries
output:add_sections
report                      =
publish                     = output_sinex


# Profile: Intensives
[vlbi__intensives]
obs_format                  = vgosdb
sessions                    = XK, XU
estimate_stochastic         =
estimate_constant           = trop_wet, vlbi_eop_dut1

[vlbi__src]
estimate_constant           = vlbi_site_pos, vlbi_eop_nut, vlbi_eop_pm, vlbi_eop_pm_rate, vlbi_eop_dut1,
                              vlbi_eop_lod, vlbi_src_dir

[vlbi__ivs]
estimate_constraint         =
estimate_constant           = vlbi_site_pos, vlbi_eop_nut, vlbi_eop_pm, vlbi_eop_pm_rate, vlbi_eop_dut1,
                              vlbi_eop_lod, vlbi_src_dir
estimate_constant:add_sections
# output                      = vlbi_baseline_stats, sinex, timeseries


# Profile: VASCC
[vlbi__vascc]
filekey_suffix              = vascc, vlbi
sessions                    = NH, SH
arc_length                  = 16
obs_format                  = ngs
skip_stages                 = estimate
ocean_tides                 = vascc_ocean_loading_FES2004
calc_models                 = vlbi_vacuum_delay, troposphere_radio, vlbi_axis_offset, vlbi_thermal_deformation,
                              vlbi_grav_delay, vlbi_geometric_delay
calc_models:add_sections
correction_models           =
pos_models                  = ocean_tides, solid_tides, solid_pole_tides, ocean_pole_tides
eop_models                  = ortho_eop, pmsdnut2, utlibr
estimate_method             =
estimate_constraint         =
estimate_stochastic         =
estimate_constant           =
output                      = vlbi_vascc_calc
mean_pole_version           = 2010
reference_frames            = vascc
celestial_reference_frames  = vascc

[troposphere_radio__vascc]
mapping_function            = gmf
gradients                   = none
meteorological_data         = site_pressure

[elevation__vascc]
cut_off                     = 0


######################################################################
#
# EDITORS
#
[analysis_status]
status                      = unchecked
status:library


######################################################################
#
# REMOVERS
#
[vlbi_data_quality]
threshold                   = 0
threshold:help              = Observations with quality value higher than threshold will be removed

[vlbi_iono_quality]
threshold                   = 0
threshold:help              = Observations with ionosphere quality value lower than threshold will be removed

[elevation]
cut_off                     = 0
cut_off:help                = Observation below cut-off angle will be removed
cut_off:type                = float(min=0, max=90)
cut_off:unit                = degrees

[ignore_station]
stations                    =
stations:library

[ignore_epochs]
intervals                   =
intervals:library

[ignore_observation]
observations                =
observations:library

[vlbi_ignore_baseline]
baselines                   =
baselines:library

[vlbi_ignore_source]
sources                     =
sources:library


######################################################################
#
# MODELS
#
# Clock correction specification
[vlbi_clock_correction]
order_of_polynomial         = 2
clock_breaks                =
clock_breaks:library
reference_clock             =
reference_clock:library

# Cable calibration
[vlbi_cable_calibration]
ignore_cable                =
ignore_cable:library


######################################################################
#
# PARAMETERS USED IN ESTIMATION
#

# Clock estimate
[vlbi_clock]
skip_stations               =
skip_stations:library
knot_interval               = 3600
knot_interval:library
process_noise               = 100
apriori_stdev               = 1
apriori_rate_stdev          = 1
unit                        = m
display_unit                = meter

# Polar motion estimate, 1 rate per session
[vlbi_eop_pm]
knot_interval               =
process_noise               =
apriori_stdev               = 100
apriori_rate_stdev          =
unit                        = mas
display_unit                = milliarcsecond

[vlbi_eop_pm_rate]
knot_interval               =
process_noise               =
apriori_stdev               = 100
apriori_rate_stdev          =
unit                        = masD
display_unit                = milliarcsecond per day

# Polar motion nutation
[vlbi_eop_nut]
process_noise               =
knot_interval               =
apriori_stdev               = 100
apriori_rate_stdev          =
unit                        = mas
display_unit                = milliarcsecond

# Polar motion estimate, 1 rate per session
[vlbi_eop_dut1]
process_noise               =
knot_interval               =
apriori_stdev               = 10
apriori_rate_stdev          =
unit                        = ms
display_unit                = millisecond

[vlbi_eop_dut1_rate]
process_noise               =
knot_interval               =
apriori_stdev               = 10
apriori_rate_stdev          =
unit                        = millisec per day
display_unit                = millisec per day


[vlbi_eop_lod]
process_noise               =
knot_interval               =
apriori_stdev               = 10
apriori_rate_stdev          =
unit                        = ms
display_unit                = millisecond

# Radio sources
# Some radio sources may be fixed. Valid options: defining, special, vcs, non_vsc, undefined, or iers-name of source(s)
[vlbi_src_dir]
fix_sources                 =
except_sources              =

knot_interval               =
process_noise               =
apriori_stdev               = 2.5e-7
apriori_rate_stdev          =
unit                        = rad
display_unit                = milliarcsec

# Station positions
[vlbi_site_pos]
fix_stations                =

knot_interval               =
process_noise               =
apriori_stdev               = 1
apriori_rate_stdev          =
unit                        = m
display_unit                = meter


#######################################################################################################################
#
# TIMESERIES
#
# IDENTIFIER        OPTIONS               DESCRIPTION
#______________________________________________________________________________________________________________________
# dataset_id        <num>                 Dataset identifier used for naming of time series dataset. Placeholder
#                                         {dataset_id} can be used.
# dataset_name      <name>                Dataset name used for naming of time series dataset. Placeholders like {tech}
#                                         or {dataset_name} can be used.
# func              <func:field[-stage]>  Define functions used for given dataset fields. Following functions can be #                                         used:
#                                           num:<field>-<stage> - calculate number of data from given dataset field
#                                           num_clock_breaks    - calculate number of clock breaks (only used for VLBI)
#                                           rms:<field>-<stage> - calculate rms of data from given dataset field   
# index             <field_names>         Fields to group over
# state             <field_names>         State vector fields included in the time series
# statistics                              Statistics fields included from dataset meta information
# text              <field_names>         Text fields included in the time series 
#

# Writer for full timeseries
[timeseries__vlbi]
index                       = station
dataset_name                = {tech}
dataset_id                  = 0
statistics                  = variance factor, degrees of freedom
# rms                         =
# num_obs                     =
func                        = num:obs-calculate, num:obs-estimate, rms:residual-calculate, rms:residual-estimate,
                              num_clock_breaks
state                       = ${vlbi:estimate_constant}, ${vlbi:estimate_stochastic}

# Writer for Sinex file
[sinex__vlbi]
blocks                      = file_reference, file_comment, input_acknowledgements, nutation_data, precession_data,
                              source_id, site_id, site_eccentricity, solution_epochs, solution_statistics,
                              solution_estimate, solution_apriori, solution_normal_equation_vector,
                              solution_normal_equation_matrix:U
analyst                     =
analyst:help                = User name of analyst (defaults to current user)
contacts                    = 
contacts:help               = E-mail address of relevant contacts
file_agency                 = 
file_agency:help            = 3-letter code for agency creating the sinex file (defaults to user institute)
data_agency                 = 
data_agency:help            = 3-letter code for agency providing the data in the sinex file (defaults to user institute)
