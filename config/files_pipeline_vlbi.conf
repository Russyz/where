# This file describe most files used by WHERE and is used extensively by the where.lib.files module to read from, write
# to and copy the correct files.
#
# Each file is referenced by a unique file key, written here in square brackets, e.g. [file_key]. Further, the
# following key-values are recognized:
#
#     filename:       The name of the file on disk.
#     aliases:        Alternative file names.
#     directory:      The directory the file is located in.
#     publish:        Directories the file may be published (copied) to.
#     description:    Quick description of the file, only for documenting purposes.
#     specification:  Link to a document specifying the format of the file.
#     creator:        The script that creates the file, if applicable.
#     origin:         Web site where the file can be found, if applicable. This should point to a website where the
#                     file can be downloaded. Not used by the program, only for documenting purposes.
#     url:            The actual url (or base-url without filename) the file can be downloaded from.
#     parser:         Name of parser (i.e. file in parsers-directory without .py) that parses the file.
#
# Files that may be gzipped can be specified as having {$gz} at the end of the filename (with the curly braces). In
# this case, the gzipped version will be automatically used if it as available.  Otherwise, the fallback is the
# unzipped version.
#
# This configuration file uses placeholders, which are replaced by running WHERE, for example the current running date
# or the station in use.  The following placeholders are available for all files:
#
#   PLACEHOLDER       TECH     DESCRIPTION
#_________________________________________________________________________________________
#   {$ce}             DGSV     - century (e.g. 20 for the year 2017)
#   {$d}              DGSV     - day (1-31)
#   {$dd}             DGSV     - day (01-31)
#   {$dow}            DGSV     - day of week (0: Sunday, 1: Monday, ..., 6: Saturday)
#   {$doy}            DGSV     - day of year (001-366)
#   {$gpsweek}        DGSV     - GPS week
#   {$gz}             DGSV     - file may or may not be gzipped
#   {$hh}             DGSV     - hour (00-23)
#   {$id}             DGSV     - as provided by --id=... on the command line
#   {$m}              DGSV     - month (1-12)
#   {$mm}             DGSV     - month (01-12)
#   {$mmm}            DGSV     - month (jan-dec)
#   {$MMM}            DGSV     - month (JAN-DEC)
#   {$tech}           DGSV     - technique (e.g. doris, gnss, vlbi, slr)
#   {$user}           DGSV     - user name
#   {$yy}             DGSV     - last 2 digits of year (00-99)
#   {$yyyy}           DGSV     - year (e.g. 2017)


[DEFAULT]
model_path      = {$path_work}/{$user}/{$tech}/{$yyyy}{$mm}{$dd}{$session}{$id}

[vlbi_station_codes]
filename        = ns-codes.txt
directory       = {$path_data}/vlbi/apriori/names
description     = IVS Network Station codes
origin          = ftp://cddis.gsfc.nasa.gov/vlbi/ivscontrol/ns-codes.txt
url             = ftp://cddis.gsfc.nasa.gov/vlbi/ivscontrol
parser          = vlbi_station_codes

[vlbi_source_names]
filename        = IVS_SrcNamesTable.txt
directory       = {$path_data}/vlbi/apriori/names
description     = IVS source names and translation to IERS names
origin          = https://vlbi.gsfc.nasa.gov/output
url             = https://vlbi.gsfc.nasa.gov/output
parser          = vlbi_source_names

[output_vascc_calc]
filename        = vascc-{$yyyy}{$mm}{$dd}CC_{$session}.txt
directory       = %(model_path)s
description     = List of calculated theoretical delays as specified for the VASCC 2015 campaign.
creator         = writers/vascc_calc.py

[output_baseline_stats]
filename        = {$tech}-baselinestats-{$yyyy}{$mm}{$dd}_{$session}.txt
directory       = %(model_path)s
description     = Baseline statistics
creator         = writers/baseline_stats.py

# ccccc should be replaced by a solution code provided by IVS
[output_vlbi_sinex]
filename        = {$yy}{$MMM}{$dd}{$session}_nmaccccc.snx
directory       = %(model_path)s
# publish         = {$path_home}, {$path_home}/testetest
description     = Normal equation for submission to IVS
creator         = writers/vlbi_sinex.py
parser          = vlbi_estimate_sinex

[vlbi_obs_ngs]
filename        = {$yy}{$MMM}{$dd}{$session}_N{$obs_version}{$gz}
directory       = {$path_data}/vlbi/obs/ngs/{$yyyy}
description     = VLBI observations in NGS format
specification   = http://lacerta.gsfc.nasa.gov/mk5/help/dbngs_format.txt
origin          = https://ivscc.gsfc.nasa.gov/products-data/data.html
url             = ftp://cddis.gsfc.nasa.gov/pub/vlbi/ivsdata/ngs/{$yyyy}
parser          = vlbi_ngs

[vlbi_obs_vgosdb]
filename        =
directory       = {$path_data}/vlbi/obs/vgosdb/{$yyyy}/{$yy}{$MMM}{$dd}{$session}
description     = VLBI observations in netCDF files
specification   = ftp://gemini.gsfc.nasa.gov/pub/misc/jmg/VLBI_Structure_2013Jun11.pdf
origin          = ftp://gemini.gsfc.nasa.gov/pub/vgosDB_IVS
parser          = vlbi_vgosdb

[vlbi_obs_vgosdb2]
filename        = {$yy}{$MMM}{$dd}{$session}_V{$obs_version}_iIVS_kngs.wrp 
directory       = {$path_data}/vlbi/obs/vgosdb/{$yyyy}/{$yy}{$MMM}{$dd}{$session}
description     = wrapper file with information about VLBI observations in netCDF files
specification   = ftp://gemini.gsfc.nasa.gov/pub/misc/jmg/VLBI_Structure_2013Jun11.pdf
origin          = ftp://gemini.gsfc.nasa.gov/pub/vgosDB_IVS  # TODO new url needed
parser          = vlbi_vgosdb2

[vlbi_obs_ngs__vascc]
filename        = {$yy}{$MMM}{$dd}CC_{$session}.ngs{$gz}
directory       = {$path_data}/vlbi/obs/ngs/vascc
description     = VLBI observations in NGS format for the VASCC
specification   = http://lacerta.gsfc.nasa.gov/mk5/help/dbngs_format.txt
origin          = http://www.hobiger.org/VASCC2015/
url             = http://www.hobiger.org/VASCC2015/NGS
parser          = vlbi_ngs

[vlbi_obs_vgosdb__vascc]
filename        =
directory       = {$path_data}/vlbi/obs/vgosdb/vascc/{$yy}{$MMM}{$dd}CC_{$session}
description     = VLBI observations in netCDF files
specification   = ftp://gemini.gsfc.nasa.gov/pub/misc/jmg/VLBI_Structure_2013Jun11.pdf
origin          = http://www.hobiger.org/VASCC2015/VGOSDB
parser          = vlbi_vgosdb

[vlbi_antenna_info]
filename        = antenna-info.txt
directory       = {$path_data}/vlbi/apriori/antenna
decription      = Axis offset and thermal deformation for VLBI antennas
origin          = http://vlbi.geod.uni-bonn.de/Analysis/Thermal/antenna-info.txt
url             = http://vlbi.geod.uni-bonn.de/Analysis/Thermal/antenna-info.txt
parser          = vlbi_antenna_info

[vlbi_master_file]
filename        = master{$yy}.txt
directory       = {$path_data}/vlbi/apriori/master
decription      = VLBI master file. List of all sessions planned and performed each year
origin          = https://ivscc.gsfc.nasa.gov/program/master.html
url             = ftp://cddis.gsfc.nasa.gov/pub/vlbi/ivscontrol
parser          = vlbi_master_file

[vlbi_master_file__intensive]
filename        = master{$yy}-int.txt
directory       = {$path_data}/vlbi/apriori/master
decription      = VLBI master file. List of all sessions planned and performed each year
origin          = https://ivscc.gsfc.nasa.gov/program/master.html
url             = ftp://cddis.gsfc.nasa.gov/pub/vlbi/ivscontrol
parser          = vlbi_master_file

[eccentricity__vlbi]
filename        = ECCDAT.ecc
directory       = {$path_data}/vlbi/apriori/eccentricity
description     = Eccentricity vectors for VLBI antennas
origin          = https://vlbi.gsfc.nasa.gov/software_calc_solve_auxiliary.htm
url             = https://vlbi.gsfc.nasa.gov/output
parser          = vlbi_eccentricity

